==Basic Queries===

1. Write a query in SQL to find the name and year of the movies.
==>  	select mov_title, mov_year from movie;


2. Write a query in SQL to find the year when the movie American Beauty released.
==> 	select mov_year from movie 
	where mov_title= 'American Beauty';


3. Write a query in SQL to find the movie which was released in the year 1999.
==> 	select mov_title from movie
	where mov_year= 1999;


4. Write a query in SQL to find the movies which was released before 1998.
==> 	select mov_title from movie
	where mov_year <= 1998;


5.Write a query in SQL to return the name of all reviewers and name of movies together in a single list.
==> 	select rev_name,mov_title from  reviewer,movie;


6. Write a query in SQL to find the name of all reviewers who have rated 7 or more stars to their rating.
==> 	select rev_name from reviewer
	inner join rating on reviewer.rev_id=rating.rev_id
	where rev_stars >= 7;


7.Write a query in SQL to find the titles of all movies that have no ratings.
==> 	select mov_title from movie 
	where mov_id not in( select mov_id from rating) ;


8.  Write a query in SQL to find the titles of the movies with ID 905, 907, 917.
==> 	select mov_title from movie
	where mov_id in (905, 907, 917);


9. Write a query in SQL to find the list of all those movies with year which include the words Boogie Nights.
==> 	select mov_id, mov_title, mov_year from movie
	where mov_title LIKE '%Boogie%Nights%'
	order by mov_year ASC;


10. Write a query in SQL to find the ID number for the actor whose first name is 'Woody' and the last name is 'Allen'.
==>	select act_id from actor 
	where act_fname='Woody' 
	and act_lname='Allen';


--------------------------------------------------------------------------------------------------------------------------------


==Sub Queries==

1. Write a query in SQL to list all the information of the actors who played a role in the movie 'Annie Hall'.
==> 	select * from actor 
	where act_id in(
	select act_id from movie_cast 
	where mov_id in (
	select mov_id from movie 
	where mov_title='Annie Hall')
	);


3. Write a query in SQL to list all the movies which released in the country other than UK.
==> 	select mov_title, mov_year, mov_time, mov_dt_rel, mov_rel_country
	from movie
	where mov_rel_country != 'UK';


5. Write a query in SQL to find the titles of all movies directed by the director whose first and last name are Woddy Allen.
==> 	select mov_title from movie 
	where mov_id=(
		select mov_id from movie_direction 
			where dir_id=(
				select dir_id from director 
				where dir_fname='Woody' and dir_lname='Allen'
				));


6. Write a query in SQL to find all the years which produced at least one movie and that received a rating of more than 3 stars.
   Show the results in increasing order.
==> 	select mov_year from movie 
	where mov_id IN (
		select mov_id from rating 
		where rev_stars>3) 
		order by mov_year;


7. Write a query in SQL to find the titles of all movies that have no ratings.
==> select mov_title from movie 
	where mov_id not in( select mov_id from rating) ;	

8. Write a query in SQL to find the names of all reviewers who have ratings with a NULL value.
==> select rev_name from reviewer 
	where rev_id IN (
	select rev_id from rating 
	where rev_stars IS NULL);

11. Write a query in SQL to find the movie title, and the highest number of stars that movie received and arranged the result according to the group of a movie and the movie title appear alphabetically in ascending order.
==> select mov_title, MAX(rev_stars) from movie, rating 
	where movie.mov_id=rating.mov_id and rating.rev_stars is not null
	group by  mov_title
	order by mov_title;

12. Write a query in SQL to find the names of all reviewers who rated the movie American Beauty.
==> select reviewer.rev_name from reviewer, rating, movie
	where reviewer.rev_id = rating.rev_id
	and movie.mov_id = rating.mov_id
	and movie.mov_title = 'American Beauty';

14. Write a query in SQL to return the reviewer name, movie title, and number of stars for those movies which rating is the lowest one.
==> select reviewer.rev_name, movie.mov_title, rating.rev_stars
	from reviewer, movie, rating
	where rating.rev_stars = (select MIN(rating.rev_stars) from rating)
	and rating.rev_id = reviewer.rev_id
	and rating.mov_id = movie.mov_id;

15. Write a query in SQL to find the titles of all movies directed by James Cameron.
==>select mov_title from movie
	where mov_id IN (select mov_id from movie_direction 
			 where dir_id IN (select dir_id from director 
			 		  where dir_fname = 'James' and dir_lname='Cameron')
			);


===== Joins =====


1. Write a query in SQL to find the name of all reviewers who have rated their ratings with a NULL value.
==> select rev_name from reviewer
	inner join rating USING(rev_id)
	where rev_stars is null;

2. Write a query in SQL to list the first and last names of all the actors who were cast in the movie 'Annie Hall', and the roles they played in that production.
==> select act_fname,act_lname,role from actor 
	join movie_cast ON actor.act_id=movie_cast.act_id
	join movie ON movie_cast.mov_id=movie.mov_id 
	and movie.mov_title='Annie Hall';

3. Write a query in SQL to find the name of movie and director (first and last names) who directed a movie that casted a role for 'Eyes Wide Shut'.
==>	select dir_fname, dir_lname, mov_title from director 
	join movie_direction ON director.dir_id=movie_direction.dir_id
	join movie ON movie_direction.mov_id=movie.mov_id 
	and movie.mov_title='Eyes Wide Shut';

4. Write a query in SQL to find the name of movie and director (first and last names) who directed a movie that casted a role as Sean Maguire.
==> select dir_fname, dir_lname, mov_title from director 
	join movie_direction ON director.dir_id=movie_direction.dir_id
	join movie ON movie_direction.mov_id=movie.mov_id 
        join movie_cast ON movie_cast.mov_id=movie.mov_id
	and role='Sean Maguire';

5. Write a query in SQL to list all the actors who acted in a movie before 1990 and also in a movie after 2000.
==> select act_fname,act_lname,mov_title, mov_year
        from actor 
	join movie_cast ON actor.act_id=movie_cast.act_id
	join movie ON movie_cast.mov_id=movie.mov_id 
	where mov_year NOT BETWEEN 1990 and 2000;

6. Write a query in SQL to list first and last name of all the directors with number of genres movies they directed with genres name, and arranged the result alphabetically with the first and last name of the director.
==> select dir_fname, dir_lname, gen_title,count(gen_title) from director 
	join movie_direction ON director.dir_id=movie_direction.dir_id
	join movie_genres ON movie_direction.mov_id=movie_genres.mov_id
        join genres ON movie_genres.gen_id=genres.gen_id 
	GROUP BY dir_fname, dir_lname,gen_title
        ORDER BY dir_fname,dir_lname;


